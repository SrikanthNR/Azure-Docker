name: dockercompose8846212941751149576
services:
  shopping.api:
    build:
      context: C:\Users\srikn\OneDrive\myCode\Azure-Docker\Shopping.API
      dockerfile: Dockerfile
    depends_on:
      shopping.db:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_Kestrel__Certificates__Default__Password: NR$$17
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      DatabaseSettings:ConnectionString: mongo://shopping-mongo:27017
    image: shoppingapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8000"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\srikn\.aspnet\https
        target: /https
        read_only: true
        bind:
          create_host_path: true
  shopping.client:
    build:
      context: C:\Users\srikn\OneDrive\myCode\Azure-Docker\Shopping.Client
      dockerfile: Dockerfile
    depends_on:
      shopping.api:
        condition: service_started
        required: true
      shopping.db:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ShoppingAPIUrl: https://shoppingapi:5001/api
    image: shoppingclient
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8001"
        protocol: tcp
  shopping.db:
    container_name: shopping-mongo
    image: mongo
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: /site
        target: /data/db
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose8846212941751149576_default